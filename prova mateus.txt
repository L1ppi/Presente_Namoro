O que √© Regex?
‚Üí Express√£o Regular = Padr√£o pra buscar, validar ou substituir partes de um texto.

Metacaracteres principais
    ‚Ä¢ . ‚Üí Qualquer caractere
    ‚Ä¢ [] ‚Üí Conjunto de caracteres ‚Üí Ex: [abc]
    ‚Ä¢ [^ ] ‚Üí Nega√ß√£o ‚Üí Ex: [^0-9] (tudo menos n√∫mero)
    ‚Ä¢ - ‚Üí Intervalo ‚Üí Ex: [a-z]
    ‚Ä¢ | ‚Üí OU ‚Üí Ex: casa|carro

Quantificadores
    ‚Ä¢ * ‚Üí 0 ou mais
    ‚Ä¢ + ‚Üí 1 ou mais
    ‚Ä¢ ? ‚Üí 0 ou 1
    ‚Ä¢ {n} ‚Üí Exatamente n vezes
    ‚Ä¢ {n,} ‚Üí Pelo menos n
    ‚Ä¢ {n,m} ‚Üí Entre n e m vezes

√Çncoras
    ‚Ä¢ ^ ‚Üí Come√ßo da linha
    ‚Ä¢ $ ‚Üí Fim da linha

Grupos e Captura
    ‚Ä¢ ( ) ‚Üí Agrupa
    ‚Ä¢ | ‚Üí Ou dentro do grupo
    ‚Ä¢ \1 ‚Üí Refer√™ncia ao 1¬∫ grupo capturado
Exemplo: (ab)+ ‚Üí Procura "ab", "abab", "ababab", etc.

Classes Especiais
Regex	Significa
\d	D√≠gito (0-9)
\D	N√£o d√≠gito
\w	Palavra (letra, n√∫mero ou _)
\W	N√£o palavra
\s	Espa√ßo em branco
\S	N√£o espa√ßo

Caracteres Especiais precisam de \ (escape)
Exemplo:
    ‚Ä¢ \. ‚Üí Ponto
    ‚Ä¢ \* ‚Üí Asterisco
    ‚Ä¢ \? ‚Üí Interroga√ß√£o

Exemplos Cl√°ssicos
‚Üí CPF: \d{3}\.\d{3}\.\d{3}-\d{2}
‚Üí Email: \w+@\w+\.\w{2,3}
‚Üí CEP: \d{5}-\d{3}
‚Üí Somente Letras: [a-zA-Z]+
‚Üí Somente N√∫meros: \d+











Anota√ß√µes de Caderno ‚Äî JSON üìí‚úçÔ∏è

O que √© JSON?
‚Üí JSON significa JavaScript Object Notation
‚Üí √â um formato usado para troca de dados entre sistemas
‚Üí Muito usado em API, banco de dados, e aplica√ß√µes web.

Pra que serve o JSON?
‚Üí Enviar e receber dados de forma simples e organizada.
‚Üí Facilita a comunica√ß√£o entre Frontend e Backend.
‚Üí Guardar configura√ß√µes ou informa√ß√µes.

Como funciona o JSON?
‚Üí JSON funciona no formato de chave e valor
Exemplo:
json
CopiarEditar
{
  "nome": "Maria",
  "idade": 22
}
    ‚Ä¢ Sempre usa { } para abrir e fechar o objeto.
    ‚Ä¢ Cada informa√ß√£o tem:
‚Üí chave: valor
‚Üí Exemplo: "nome": "Maria"

Regras IMPORTANTES do JSON ‚ö†Ô∏è
    ‚Ä¢ As chaves SEMPRE ficam entre aspas duplas " "
    ‚Ä¢ Textos tamb√©m usam aspas duplas " "
    ‚Ä¢ N√∫meros ficam sem aspas
    ‚Ä¢ N√£o aceita coment√°rios
    ‚Ä¢ Tem que colocar v√≠rgula entre os itens
    ‚Ä¢ N√ÉO pode ter v√≠rgula no √∫ltimo item!
Exemplo ERRADO:
json
CopiarEditar
{
  "nome": "Lucas",
  "idade": 20,
}
Exemplo CERTO:
json
CopiarEditar
{
  "nome": "Lucas",
  "idade": 20
}

Tipos de dados aceitos no JSON:
Tipo	Exemplo
String	"Texto entre aspas"
N√∫mero	10 ou 5.7
Booleano	true ou false
Array	["um", "dois", "tr√™s"]
Objeto	{ "chave": "valor" }
Null	null

Exemplo de JSON completo:
json
CopiarEditar
{
  "nome": "Ana",
  "idade": 30,
  "aprovado": true,
  "materias": ["Matem√°tica", "Hist√≥ria"],
  "endereco": {
    "rua": "Rua A",
    "numero": 100
  },
  "responsavel": null
}

Diferen√ßa JSON x Objeto JavaScript
JSON (arquivo .json)	Objeto JavaScript
Sempre usa aspas duplas	Pode usar aspas simples
Formato texto (string)	Formato direto de c√≥digo
N√£o aceita coment√°rios	Pode ter coment√°rios

Convers√£o em JavaScript:
‚Üí JSON ‚Üí Objeto JavaScript:
javascript
CopiarEditar
JSON.parse(jsonString);
‚Üí Objeto JavaScript ‚Üí JSON:
javascript
CopiarEditar
JSON.stringify(objetoJS);

Onde encontramos JSON?
    ‚Ä¢ APIs REST
    ‚Ä¢ Arquivos de configura√ß√£o (.json)
    ‚Ä¢ MongoDB (Banco de Dados)
    ‚Ä¢ Comunica√ß√£o entre sistemas
    ‚Ä¢ JSON Web Token (JWT)
